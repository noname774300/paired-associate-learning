{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["pairs","question","rightAnswer","Learning","props","useEffect","state","started","timeoutID","setTimeout","indexOfPair","length","goToNextPhase","goToNextPair","learningTimeSeconds","clearTimeout","numberOfTry","onClick","startToLearn","Answer","type","value","answer","onChange","event","changeAnswer","target","confirmAnswer","Intermediate","numberOfCorrectAnswers","Result","App","useState","phase","setState","goNext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.466d7db9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\ntype Pair = { question: string; rightAnswer: string };\n\nconst pairs: Pair[] = [\n  { question: \"ペミ\", rightAnswer: \"ロチ\" },\n  { question: \"テス\", rightAnswer: \"トン\" },\n  { question: \"モン\", rightAnswer: \"ダイ\" },\n];\n\nconst learningTimeSeconds = 5;\n\ntype Learning = {\n  phase: \"learning\";\n  started: boolean;\n  indexOfPair: number;\n  numberOfTry: number;\n};\n\ntype Answer = {\n  phase: \"answer\";\n  indexOfPair: number;\n  answer: string;\n  numberOfCorrectAnswers: number;\n  numberOfTry: number;\n};\n\ntype Intermediate = {\n  phase: \"intermediate\";\n  numberOfCorrectAnswers: number;\n  numberOfTry: number;\n};\n\ntype Result = {\n  phase: \"result\";\n  numberOfTry: number;\n};\n\ntype State = Learning | Answer | Intermediate | Result;\ntype StartToLearn = () => void;\ntype GoToNextPair = () => void;\ntype ChangeAnswer = (answer: string) => void;\ntype ConfirmAnswer = () => void;\ntype GoToNextPhase = () => void;\n\nfunction App(): JSX.Element {\n  const [state, setState] = useState<State>({\n    phase: \"learning\",\n    started: false,\n    indexOfPair: 0,\n    numberOfTry: 1,\n  });\n  const goNext = () => {\n    switch (state.phase) {\n      case \"learning\": {\n        setState({\n          phase: \"answer\",\n          indexOfPair: 0,\n          answer: \"\",\n          numberOfCorrectAnswers: 0,\n          numberOfTry: state.numberOfTry,\n        });\n        break;\n      }\n      case \"answer\": {\n        // This case is delegated to confirmAnswer function.\n        break;\n      }\n      case \"intermediate\": {\n        setState({\n          phase: \"learning\",\n          started: false,\n          indexOfPair: 0,\n          numberOfTry: state.numberOfTry + 1,\n        });\n        break;\n      }\n      case \"result\": {\n        setState({\n          phase: \"learning\",\n          started: false,\n          indexOfPair: 0,\n          numberOfTry: 1,\n        });\n        break;\n      }\n    }\n  };\n  return (\n    <div>\n      <header>\n        <h1></h1>\n      </header>\n      <main>\n        {state.phase === \"learning\" ? (\n          <Learning\n            state={state}\n            startToLearn={() => setState({ ...state, started: true })}\n            goToNextPair={() =>\n              setState({ ...state, indexOfPair: state.indexOfPair + 1 })\n            }\n            goToNextPhase={goNext}\n          />\n        ) : state.phase === \"answer\" ? (\n          <Answer\n            state={state}\n            changeAnswer={(answer: string) => setState({ ...state, answer })}\n            confirmAnswer={() => {\n              const numberOfCorrectAnswers =\n                state.numberOfCorrectAnswers +\n                (state.answer === pairs[state.indexOfPair].rightAnswer ? 1 : 0);\n              const currentPairIsLast = state.indexOfPair === pairs.length - 1;\n              if (currentPairIsLast) {\n                numberOfCorrectAnswers < pairs.length\n                  ? setState({\n                      phase: \"intermediate\",\n                      numberOfCorrectAnswers,\n                      numberOfTry: state.numberOfTry,\n                    })\n                  : setState({\n                      phase: \"result\",\n                      numberOfTry: state.numberOfTry,\n                    });\n                return;\n              }\n              setState({\n                ...state,\n                indexOfPair: state.indexOfPair + 1,\n                answer: \"\",\n                numberOfCorrectAnswers: numberOfCorrectAnswers,\n              });\n            }}\n          />\n        ) : state.phase === \"intermediate\" ? (\n          <Intermediate state={state} goToNextPhase={goNext} />\n        ) : (\n          <Result state={state} goToNextPhase={goNext} />\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction Learning(props: {\n  state: Learning;\n  startToLearn: StartToLearn;\n  goToNextPair: GoToNextPair;\n  goToNextPhase: GoToNextPhase;\n}) {\n  useEffect(() => {\n    if (!props.state.started) return;\n    const timeoutID = setTimeout(() => {\n      const currentPairIsLast = props.state.indexOfPair === pairs.length - 1;\n      currentPairIsLast ? props.goToNextPhase() : props.goToNextPair();\n    }, learningTimeSeconds * 1000);\n    return () => clearTimeout(timeoutID);\n  });\n  return (\n    <div>\n      <div>{props.state.numberOfTry}回目の学習</div>\n      {props.state.started ? (\n        <>\n          <div>\n            {pairs.length}ペア中{props.state.indexOfPair + 1}ペア目\n          </div>\n          <div>\n            {pairs[props.state.indexOfPair].question}、\n            {pairs[props.state.indexOfPair].rightAnswer}\n          </div>\n        </>\n      ) : (\n        <>\n          <div>これから単語のペアが1個ずつ表示されます。</div>\n          <div>例：ペミ、ロチ</div>\n          <div>{learningTimeSeconds}秒以内に単語のペアを覚えてください。</div>\n          <div>{learningTimeSeconds}秒経過すると次のペアが表示されます。</div>\n          <div>\n            全部で{pairs.length}\n            個のペアが表示されますので、すべて覚えてください。\n          </div>\n          <div>\n            全部のペアの表示が終わったら、一方の単語とペアになった単語を入力してもらいます。\n          </div>\n          <button onClick={props.startToLearn}>学習を始める</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction Answer(props: {\n  state: Answer;\n  changeAnswer: ChangeAnswer;\n  confirmAnswer: ConfirmAnswer;\n}) {\n  const onChangeAnswer = (event: React.ChangeEvent<HTMLInputElement>) =>\n    props.changeAnswer(event.target.value);\n  return (\n    <div>\n      <div>{props.state.numberOfTry}回目の学習</div>\n      <div>\n        {pairs.length}ペア中{props.state.indexOfPair + 1}ペア目\n      </div>\n      <div>ペアの単語を入力してください。</div>\n      <div>\n        {pairs[props.state.indexOfPair].question}、\n        <input\n          type=\"text\"\n          value={props.state.answer}\n          onChange={onChangeAnswer}\n        />\n      </div>\n      <button onClick={props.confirmAnswer}>答えを確定する</button>\n    </div>\n  );\n}\n\nfunction Intermediate(props: {\n  state: Intermediate;\n  goToNextPhase: GoToNextPhase;\n}) {\n  return (\n    <div>\n      <div>{props.state.numberOfTry}回目の学習</div>\n      <div>\n        {pairs.length}ペア中、{props.state.numberOfCorrectAnswers}ペア正解です。\n      </div>\n      <button onClick={props.goToNextPhase}>再度学習を始める</button>\n    </div>\n  );\n}\n\nfunction Result(props: { state: Result; goToNextPhase: GoToNextPhase }) {\n  return (\n    <div>\n      <div>\n        {props.state.numberOfTry}回目の学習で全{pairs.length}\n        ペア正解しました。\n      </div>\n      <button onClick={props.goToNextPhase}>すべてをやり直す</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}